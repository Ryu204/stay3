name: web_build

on: [push, pull_request]

jobs:
  web-build:
    defaults:
      run:
        shell: bash

    name: Build on Windows

    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Find Chrome on Windows and set CHROME_PATH
        shell: pwsh
        run: |
          $paths = @(
            "${env:ProgramFiles}\Google\Chrome\Application\chrome.exe",
            "${env:ProgramFiles(x86)}\Google\Chrome\Application\chrome.exe",
            "${env:LocalAppData}\Google\Chrome\Application\chrome.exe"
          )
          foreach ($p in $paths) {
            if (Test-Path $p) {
              echo "CHROME_PATH=$p" >> $env:GITHUB_ENV
              echo "Found Chrome at $p"
              exit 0
            }
          }
          Write-Error "Chrome not found!"
          exit 1

      - name: Check browswer environment
        run: |
          cd test/web
          PUPPETEER_CHROME_SKIP_DOWNLOAD=true npm i
          node check_browser.js
          printf "\nchrome://gpu:\n" && cat browser_data/gpu-info.txt
          printf "\nchrome:://version:\n" && cat browser_data/launch-command.txt

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      - name: Configure
        run: |
          git submodule update --init --remote
          emcmake cmake -S . -B build -DEMSCRIPTEN_FORCE_COMPILERS=OFF -DCMAKE_BUILD_TYPE=Release -Dstay3_BUILD_TESTS=ON -Dstay3_BUILD_EXAMPLES=ON -GNinja

      - name: Build
        run: cmake --build build -j4

      - name: Test
        run: ctest --test-dir build/test --output-on-failure

      - name: Clean build artifacts
        run: rm -rf build/example/CMakeFiles/

      - name: Generate index.html
        uses: gacts/directory-listing@v1
        with:
          target: ./build/example

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/example
