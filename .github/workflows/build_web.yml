name: web_build

on: [push, pull_request]

env:
  DISPLAY: :99

jobs:
  web-build:
    defaults:
      run:
        shell: bash

    name: Build on Ubuntu

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Find Chromium executable path
        id: find_chrome
        run: |
          CHROME_PATH=$(which chromium || which chromium-browser || which google-chrome || which chrome || echo "")
          if [ -z "$CHROME_PATH" ]; then
            echo "Chromium not found!"
            exit 1
          fi
          echo "CHROME_PATH=$CHROME_PATH" >> $GITHUB_ENV

      - name: Log Chromium path env var
        run: echo "Chromium executable path is $CHROME_PATH"

      - name: TMP
        run: |
          sudo apt-get install -y xorg-dev xvfb fluxbox
          Xvfb $DISPLAY -screen 0 1280x1024x16 &
          sleep 5
          fluxbox > /dev/null 2>&1 &
          sleep 5
          cd test/web && npm i && node bullshit.js

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y nodejs npm

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      - name: Configure
        run: |
          git submodule update --init --remote
          emcmake cmake -S . -B build -DEMSCRIPTEN_FORCE_COMPILERS=OFF -DCMAKE_BUILD_TYPE=Release -Dstay3_BUILD_TESTS=ON -Dstay3_BUILD_EXAMPLES=ON -GNinja

      - name: Build
        run: cmake --build build -j4

      # - name: Prepare test environment
      #   run: |
      #     sudo apt-get install -y xorg-dev xvfb fluxbox
      #     Xvfb $DISPLAY -screen 0 1280x1024x16 &
      #     sleep 5
      #     fluxbox > /dev/null 2>&1 &
      #     sleep 5
      #     cd test/web
      #     npm i

      - name: Test
        run: ctest --test-dir build/test --output-on-failure

  deploy:
    needs: web-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Clean old CMake files
        run: rm -rf build/example/CMakeFiles/

      - name: Generate Directory Listings
        uses: jayanta525/github-pages-directory-listing@v4.0.0
        with:
          FOLDER: build/example

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/example
